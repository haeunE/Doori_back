package com.example.doori.dto;

import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;

import lombok.Data;

@Data
public class UserDTO {
    
	// 회원 ID - 5자 이상 50자 이하
	@NotEmpty(message = "아이디는 필수 입력입니다.")
	@Size(min = 5, max = 50, message = "아이디는 5자 이상 50자 이하로 입력해야 합니다.")
	private String username;

	// 회원 비밀번호 - 8~30자, 문자와 숫자를 포함해야 함
	@NotEmpty(message = "비밀번호는 필수 입력입니다.")
	@Pattern(regexp = "^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,30}$", 
	         message = "비밀번호는 8~30자, 하나 이상의 문자와 숫자를 포함해야 합니다.")
	private String password;

	// 이름 - 한글 또는 영문, 10자 이하
	@NotEmpty(message = "이름은 필수 입력입니다.")
	@Pattern(regexp = "^[A-Za-z가-힣]{1,10}$", 
	         message = "이름은 한글 또는 영문, 10자 이하로 입력해야 합니다.")
	private String name;

	// 이메일 - 유효한 이메일 형식
	@NotEmpty(message = "이메일은 필수 입력입니다.")
	@Pattern(regexp = "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$", 
	         message = "유효한 이메일 형식을 입력하세요.")
	private String email;

	// 전화번호 - 11자리 숫자
	@NotEmpty(message = "전화번호는 필수 입력입니다.")
	@Pattern(regexp = "^\\d{11}$", 
	         message = "전화번호는 (-) 제외하고 숫자만 입력하세요. 예: 01012345678")
	private String tel;

}